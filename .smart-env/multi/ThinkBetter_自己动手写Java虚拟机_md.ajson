
"smart_sources:ThinkBetter/自己动手写Java虚拟机.md": {"path":"ThinkBetter/自己动手写Java虚拟机.md","last_embed":{"hash":null},"embeddings":{},"last_read":{"hash":"8084o8","at":1749534054585},"class_name":"SmartSource","last_import":{"mtime":1713513527537,"size":6539,"at":1749534054615,"hash":"8084o8"},"blocks":{"#---frontmatter---":[1,10],"###ch02":[12,20],"###ch02#{1}":[13,13],"###ch02#{2}":[14,20],"###ch03":[21,34],"###ch03#{1}":[22,22],"###ch03#{2}":[23,31],"###ch03#{3}":[32,34],"###ch04":[35,49],"###ch04#{1}":[36,36],"###ch04#{2}":[37,44],"###ch04#{3}":[45,49],"###ch06":[50,58],"###ch06#{1}":[51,58],"###ch07":[59,64],"###ch07#{1}":[60,64],"###ch08":[65,70],"###ch08#{1}":[67,70],"###ch09":[71,87],"###ch09#{1}":[73,87],"###ch10":[88,131],"###ch10#{1}":[89,131]},"outlinks":[{"title":"标准的classfile结构","target":"https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html","line":23},{"title":"Pasted image 20230310090925.png","target":"Pasted image 20230310090925.png","line":46},{"title":"）+数组元素的类型描述符；数组的类型描述符就是类名本身。\n创建数组的方式和创建普通对象的方式不同。普通对象由new指令创建，然后由构造函数初始化。基本类型数组由newarray指令创建；引用类型数组由anewarray指令创建；另外还有一个专门的multianewarray指令用于创建多维数组。\n\n### ch09\n\nOpenJDK类库中的本地方法是用JNI(Java Native Interface)\n先实现一个本地方法注册表，用来注册和查找本地方法。\n\n[反射","target":"<反射（reflection）是指在运行时动态地获取类的信息、访问对象属性和方法的机制。\n反射可以让程序在运行时动态地操作类和对象，而不需要在编译时确定这些操作。\n\n反射通过Java语言提供的java.lang.reflect包中的类和接口来实现。使用反射，可以在运行时获取一个类的类名、属性、方法、构造函数等信息，并且可以通过这些信息来创建对象、调用方法、修改属性等。\n\n反射在某些场景下非常有用，比如在框架开发、动态代理、测试框架、代码生成等领域都有广泛的应用。但是，反射也会带来一些性能上的损失和代码可读性的下降，因此需要谨慎使用。\n\n在Java语言中，有两种方式可以获得类对象引用：使用类字面值和调用对象的getClass（）方法。\n\n自动拆装箱，就是为了将原始类型值自动的装换成对应的对象。\n\n\n### ch10\n异常可以分为两类：Checked异常和Unchecked异常\nUnchecked异常包括java.lang.RuntimeException、java.lang.Error以及它们的子类，其他异常都是Checked异常\n所有异常都最终继承自java.lang.Throwable\n如果一个方法有可能导致Checked异常抛出，则该方法要么需要捕获该异常并妥善处理，要么必须把该异常列在自己的throws子句中，否则无法通过编译。Unchecked异常没有这个限制。\n\n异常可以由Java虚拟机抛出，也可以由Java代码抛出。\n\n异常是通过`throw`关键字抛出。\n\n构造函数都调用了超类java.lang.Throwable的构造函数。Throwable的构造函数又调用了fillInStackTrace（）方法记录Java虚拟机栈信息\n```java\n// java.lang.Throwable\npublic synchronized Throwable fillInStackTrace(","line":68}],"metadata":{"author":null,"tags":["Book","编程"],"type":null,"startDate":"2023-03-09","endDate":null,"rating":null}},